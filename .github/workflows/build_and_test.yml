name: Build Package and Run Tests

on: [push]

defaults:
  run:
    shell: bash

jobs:
  unit_tests:
    strategy:
      matrix:
        include:
          - os: ubuntu-20.04
            python: xvfb-run python3
            pip_arg: ""
            nosetests_args: --with-coverage --cover-package epregressions  # --cover-html for local html results
            pyinstall_args: ""
            add_data: "epregressions/diffs/math_diff.config:epregressions/diffs"
            pack_tool: tar -zcvf
            extension: .tar.gz
            pack_suffix: -C dist runner
          - os: macos-10.15
            python: python3
            pip_arg: ""
            nosetests_args: ""
            pyinstall_args: --noconsole
            add_data: "epregressions/diffs/math_diff.config:epregressions/diffs"
            pack_tool: tar -zcvf
            extension: .tar.gz
            pack_suffix: -C dist runner
          - os: windows-2019
            python: python
            pip_arg: --user
            nosetests_args: ""
            pyinstall_args: --noconsole
            add_data: "epregressions/diffs/math_diff.config;epregressions/diffs"
            pack_tool: 7z.exe a
            extension: .zip
            pack_suffix: ./dist/*

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.7
      uses: actions/setup-python@v2
      with:
        python-version: 3.7
    - name: Install Pip Dependencies
      run: pip install ${{ matrix.pip_arg }} -r requirements.txt
    - name: Run Tests
      run: nosetests ${{ matrix.nosetests_args }}
    - name: Upload Coverage Results
      if: matrix.os == 'ubuntu-20.04'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: coveralls --service=github
    - name: Make Deploy Directory
      run: mkdir deploy
    - name: Build Installer
      run: pyinstaller --onefile ${{ matrix.pyinstall_args }} --add-data "${{ matrix.add_data }}" epregressions/runner.py
    - name: Fixup Installer
      run: |
        VERSION_STRING=$(grep VERSION epregressions/__init__.py | cut -d= -f2 | xargs)
        ${{ matrix.pack_tool }} deploy/EnergyPlusRegressionTool-"${VERSION_STRING}"-${{ matrix.os }}${{ matrix.extension }} ${{ matrix.pack_suffix }}
    - name: Upload Package
      uses: actions/upload-artifact@v2
      with:
        name: EnergyPlusRegressionTool-${{ matrix.os }}
        path: deploy/EnergyPlusRegressionTool-*
    - name: Build Wheel
      run: python3 setup.py bdist_wheel sdist
    - name: Whats in dist
      run: cd dist && ls -al
    - name: Publish package to PyPi (tags only)
      if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags') && matrix.os == 'ubuntu-20.04'
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}
    #- name: Setup upterm session
    #  uses: lhotari/action-upterm@v1
